# --- basic marl algorithm parameters ---

name: "marl"

# use epsilon greedy action selector
action_selector: "epsilon_greedy"
epsilon_start: 1.0
epsilon_finish: 0.05
epsilon_anneal_time: 240000

runner: "v2xepisode"

buffer_size: 5000
masking: False # True for problem which need masking, like time-related problem.

# update the target network every {} episodes
target_update_interval: 4
#consensus_builder_embedding_dim: 4

# use the Q_Learner to train
agent_output_type: "q"
learner: "q_learner_for_v2x"
double_q: True
#mixer: "qmix"
mixer: null
#mixing_embed_dim: 64
#hypernet_layers: 2
#hypernet_embed: 32

# --- Agent parameters ---
agent: "mlp" # Default rnn agent
mac: "fingerprint_mac"
#mlp_hidden_dim: 64
mlp_hidden_dims: [500, 250, 120] # Sizes of each hidden state for default mlp agent
obs_agent_id: False # Include the agent's one_hot id in the observation
obs_last_action: False # Include the agent's last action (one_hot) in the observation
finger_print: True
t_max: 300000
#consensus_builder_hidden_dim: 64
#consensus_builder_dim: 4
#
#tau: 0.996
#center_tau: 0.9
#online_temp: 0.1
#target_temp: 0.04
#input: "obs" # "obs" or "hidden"
